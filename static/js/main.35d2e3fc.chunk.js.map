{"version":3,"sources":["components/TimerControls.js","components/pomodoro.js","App.js","reportWebVitals.js","index.js"],"names":["TimerControls","handleBreakDecrement","handleBreakIncrement","breakLength","handleSessionDecrement","handleSessionIncrement","sessionLength","className","id","onClick","icon","faArrowDown","size","faArrowUp","Pomodoro","useState","setSessionLength","setBreakLength","isRunning","setIsRunning","minutes","setMinutes","seconds","setSeconds","timerLabel","settimerLabel","myAudio","useRef","updateTime","useEffect","current","play","setTimeout","pause","currentTime","myTimer","clearTimeout","faPlayCircle","faPauseCircle","faUndo","ref","src","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35d2e3fc.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \r\nimport {faArrowUp, faArrowDown } from '@fortawesome/fontawesome-free-solid';\r\n\r\nconst TimerControls = ({handleBreakDecrement,handleBreakIncrement,breakLength,handleSessionDecrement, handleSessionIncrement,sessionLength})=> {\r\nreturn(\r\n    <div className='timer-controls-container'>\r\n    <div className='break-container'>\r\n        <p id=\"break-label\">Break Length</p>\r\n      \r\n        <div className=\"timer-controls\">     \r\n          <button id='break-decrement' onClick={handleBreakDecrement}> <FontAwesomeIcon icon={faArrowDown} size='2x' /></button>\r\n            <p id='break-length'>{breakLength}</p>\r\n           <button id='break-increment' onClick={handleBreakIncrement}><FontAwesomeIcon icon={faArrowUp} size='2x' /></button>\r\n        </div>\r\n    </div>\r\n\r\n    <div className='session-container'>\r\n        <p id=\"session-label\">Session Length</p>\r\n        <div className='timer-controls'>\r\n            <button id='session-decrement' onClick={handleSessionDecrement}><FontAwesomeIcon icon={faArrowDown} size='2x' /></button>\r\n            <p id=\"session-length\">{sessionLength}</p>\r\n            <button id='session-increment' onClick={handleSessionIncrement}><FontAwesomeIcon icon={faArrowUp} size='2x' /></button>\r\n        </div>\r\n    </div>\r\n</div>\r\n)}\r\n\r\nexport default TimerControls; \r\n\r\n\r\n/*\r\n\r\n     <div className='timer-controls-container'>\r\n                <div className='break-container'>\r\n                    <p id=\"break-label\">Break Length</p>\r\n                  \r\n                    <div className=\"timer-controls\">     \r\n                      <button id='break-decrement' onClick={handleBreakDecrement}> <FontAwesomeIcon icon={faArrowDown} size='2x' /></button>\r\n                        <p id='break-length'>{breakLength}</p>\r\n                       <button id='break-increment' onClick={handleBreakIncrement}><FontAwesomeIcon icon={faArrowUp} size='2x' /></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='session-container'>\r\n                    <p id=\"session-label\">Session Length</p>\r\n                    <div className='timer-controls'>\r\n                        <button id='session-decrement' onClick={handleSessionDecrement}><FontAwesomeIcon icon={faArrowDown} size='2x' /></button>\r\n                        <p id=\"session-length\">{sessionLength}</p>\r\n                        <button id='session-increment' onClick={handleSessionIncrement}><FontAwesomeIcon icon={faArrowUp} size='2x' /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n*/","import React, { useEffect, useState, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPauseCircle, faPlayCircle, faUndo } from '@fortawesome/fontawesome-free-solid';\r\nimport TimerControls from './TimerControls';\r\n\r\nconst Pomodoro = () => {\r\n\tconst [sessionLength, setSessionLength] = useState(25);\r\n\tconst [breakLength, setBreakLength] = useState(5);\r\n\tconst [isRunning, setIsRunning] = useState(false);\r\n\tconst [minutes, setMinutes] = useState(sessionLength);\r\n\tconst [seconds, setSeconds] = useState(0);\r\n\tconst [timerLabel, settimerLabel] = useState('Session');\r\n\tconst myAudio = useRef();\r\n\r\n\tconst updateTime = () => {\r\n\t\tif (isRunning) {\r\n\t\t\tif (minutes === 0 && seconds === 0) {\r\n\t\t\t\tsetSeconds(0);\r\n\t\t\t\tsetMinutes(() => (timerLabel === 'Session' ? breakLength : sessionLength));\r\n\t\t\t\tsettimerLabel((timerLabel) => (timerLabel === 'Session' ? 'Break' : 'Session'));\r\n\t\t\t} else {\r\n\t\t\t\tif (seconds === 0) {\r\n\t\t\t\t\tsetSeconds(59);\r\n\t\t\t\t\tsetMinutes((minutes) => minutes - 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetSeconds((seconds) => seconds - 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (minutes === 0 && seconds === 0) {\r\n\t\t\tmyAudio.current.play();\r\n\t\t\tsetTimeout(() => myAudio.current.pause(), 3000);\r\n\t\t\tsetTimeout(() => (myAudio.current.currentTime = 0), 3000);\r\n\t\t}\r\n\t\tconst myTimer = setTimeout(updateTime, 1000);\r\n\t\treturn function cleanUp() {\r\n\t\t\tclearTimeout(myTimer);\r\n\t\t};\r\n\t});\r\n\r\n\tconst handleBreakIncrement = () => {\r\n\t\tif (breakLength < 60 && !isRunning) {\r\n\t\t\tsetBreakLength(breakLength + 1);\r\n\t\t\tsetSeconds(0);\r\n\t\t}\r\n\t};\r\n\tconst handleBreakDecrement = () => {\r\n\t\tif (breakLength > 1 && !isRunning) {\r\n\t\t\tsetBreakLength(breakLength - 1);\r\n\t\t\tsetSeconds(0);\r\n\t\t}\r\n\t};\r\n\tconst handleSessionIncrement = () => {\r\n\t\tif (sessionLength < 60 && minutes < 60 && !isRunning) {\r\n\t\t\tsetSessionLength(sessionLength + 1);\r\n\t\t\tsetMinutes(minutes + 1);\r\n\t\t\tsetSeconds(0);\r\n\t\t}\r\n\t};\r\n\tconst handleSessionDecrement = () => {\r\n\t\tif (sessionLength > 1 && minutes > 1 && !isRunning) {\r\n\t\t\tsetSessionLength(sessionLength - 1);\r\n\t\t\tsetMinutes(minutes - 1);\r\n\t\t\tsetSeconds(0);\r\n\t\t}\r\n\t};\r\n\r\n\tconst ToggleStartStop = () => {\r\n\t\tsetIsRunning((isRunning) => !isRunning);\r\n\t};\r\n\r\n\tconst resetTimer = () => {\r\n\t\tsetSessionLength(25);\r\n\t\tsetBreakLength(5);\r\n\t\tsetMinutes(25);\r\n\t\tsetSeconds(0);\r\n\t\tsetIsRunning(false);\r\n\t\tsettimerLabel('Session');\r\n\t\tmyAudio.current.pause();\r\n\t\tmyAudio.current.currentTime = 0;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"pomodoro-container\" className=\"pomodoro-container\">\r\n\t\t\t<h2 className=\"title\">Pomodoro Clock</h2>\r\n\r\n\t\t\t<TimerControls\r\n\t\t\t\thandleBreakDecrement={handleBreakDecrement}\r\n\t\t\t\thandleBreakIncrement={handleBreakIncrement}\r\n\t\t\t\tbreakLength={breakLength}\r\n\t\t\t\thandleSessionDecrement={handleSessionDecrement}\r\n\t\t\t\thandleSessionIncrement={handleSessionIncrement}\r\n\t\t\t\tsessionLength={sessionLength}\r\n\t\t\t/>\r\n\t\t\t<div className=\"tomato\">\r\n\t\t\t\t<div id=\"tomatoTop\" /> <div id=\"tomatoFill\" />\r\n\t\t\t\t<h2 id=\"timer-label\"> {timerLabel}</h2>\r\n\t\t\t\t<p id=\"time-left\">\r\n\t\t\t\t\t{minutes < 10 ? `0${minutes}:` : `${minutes}:`}\r\n\t\t\t\t\t<span>{seconds < 10 ? `0${seconds}` : `${seconds}`} </span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"bottom-buttons-container\">\r\n\t\t\t\t<button id=\"start_stop\" onClick={ToggleStartStop}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPlayCircle} />\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPauseCircle} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"reset\" onClick={resetTimer}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faUndo} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<audio\r\n\t\t\t\tid=\"beep\"\r\n\t\t\t\tref={myAudio}\r\n\t\t\t\tsrc=\"https://actions.google.com/sounds/v1/alarms/digital_watch_alarm_long.ogg\"\r\n\t\t\t\ttype=\"audio\"\r\n\t\t\t>\r\n\t\t\t</audio>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Pomodoro;\r\n","import './App.css';\nimport Pomodoro from './components/pomodoro'; \n\nfunction App() {\n  return <Pomodoro/>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}